services:
  db:
    image: postgres:13
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    volumes:
      - .:/app
      - static_volume:/app/stocks_products/static
    command: >
      sh -c "python stocks_products/manage.py migrate &&
             python stocks_products/manage.py collectstatic --noinput &&
             gunicorn --chdir stocks_products --bind 0.0.0.0:8000 stocks_products.wsgi:application"
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/stocks_products/static
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: